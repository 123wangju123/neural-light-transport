[ENVIRONMENT]

curr_dir = /data/vision/billf/intrinsic/nlt/neural-light-transport/data_gen/
# All files and directories below are relative to this


[JOB]

bin = bash
job_file = private/render_job.sh
params_file = /data/vision/billf/intrinsic/nlt/tmp/sss/render_params.txt # parameters are space-delimited in each line
# `<bin> <job_file> <any line of params_file>` should run

pool_dir = /data/vision/billf/intrinsic/nlt/tmp/sss/render_pool


[MACHINES]

# Can use Python commands such as [] or [x for x in range(1, 38) if x not in [10]]
# Use >n (or >=n) to auto-select machines with more than n (or n-1) free cores
cpu = >=12
gpu = []


[OPTIONAL]

# Simply delete the following items if undesired

expect_file = /data/vision/billf/intrinsic/nlt/tmp/sss/render_expects.txt # files are space-delimited in each line
# Each line corresponds to that of params_file
# If ALL expected output files for a job are present, this job will be skipped
# if ANY expected output file is not present, or this file is not provided, this job will be run

client_threads = 12
# How many threads (or pool workers) should run at the same time on each machine
# Useful when, e.g., 10 workers will hog the entire machine, and you have 20 jobs per machine
# -1 means no limit

client_update_pbar_every = 1
# Every how many jobs the client updates its progress bar once

client_quit_after = -1
# After how many jobs the client quits
# Useful for testing if what gets produced is what you expect before dispatching all jobs
# -1 means quitting only when all jobs are done

client_dryrun = False
# If true, only print the commands, rather than actually running them
